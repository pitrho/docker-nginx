#!/usr/bin/env bash

: ${NGINX_RUN_TYPE:='advanced'}


RANCHER_GEN_TEMPLATES=''
for VAR in $(env)
do
    # Loop through all HTTPPWD_X variables and create the users if any
    if [ ! -z "$(echo $VAR | grep -E '^HTTPPWD_')" ]; then
      VAR_VALUE=$(echo "$VAR" | sed -r "s|HTTPPWD_(.*)=||g")
      username=$(echo "$VAR_VALUE" | sed -r "s|:(.*)||g")
      password=$(echo "$VAR_VALUE" | sed -r "s|(.*):||g")

      # Create password
      sh -c "echo -n '${username}:' >> /etc/nginx/.htpasswd"
      sh -c "openssl passwd -apr1 ${password} >> /etc/nginx/.htpasswd"
    fi

    if [ ! -z "$(echo $VAR | grep -E '^RANCHER_GEN_TEMPLATE_')" ]; then
      template=$(echo "$VAR" | sed -r "s|RANCHER_GEN_TEMPLATE_(.*)=||g")
      RANCHER_GEN_TEMPLATES="$RANCHER_GEN_TEMPLATES --template $template"
    fi
done

if [ "$NGINX_RUN_TYPE" = 'advanced' -o "$NGINX_RUN_TYPE" = 'dockren-gen' ]; then
  unbuffer honcho -f Procfile.docker-gen start
elif [ "$NGINX_RUN_TYPE" = 'rancher-gen' ]; then
  echo "Running rancher-gen"

  if [ -z "$RANCHER_GEN_TEMPLATES" ]; then
    RANCHER_GEN_TEMPLATES="--template /nginxconf/default.tmpl:/etc/nginx/sites-available/default"
  fi

  export RANCHER_GEN_TEMPLATES=$RANCHER_GEN_TEMPLATES
elif [ "$NGINX_RUN_TYPE" = 'kube-gen' ]; then
  echo " Running kube-gen"

  # Setup kube config file
  kubectl config --kubeconfig /.kubeconfig set-cluster k8s --server=$K8S_SERVER_URL
  kubectl config --kubeconfig /.kubeconfig set-credentials $K8S_USERNAME --token=$K8S_USER_TOKEN
  kubectl config --kubeconfig /.kubeconfig set-context eks --cluster=k8s --user=$K8S_USERNAME
  kubectl config --kubeconfig /.kubeconfig use-context eks --user=$K8S_USERNAME


  unbuffer honcho -f Procfile.kube-gen start
else
  unbuffer nginx -g "daemon off;"
fi